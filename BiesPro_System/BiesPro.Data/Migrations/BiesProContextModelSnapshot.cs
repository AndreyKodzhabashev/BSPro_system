// <auto-generated />
using System;
using BiesPro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BiesPro.Data.Migrations
{
    [DbContext(typeof(BiesProContext))]
    partial class BiesProContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BiesPro.Models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressText")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true);

                    b.Property<long>("TownId");

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("BiesPro.Models.ClientOrVendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AddressId");

                    b.Property<string>("BULSTAT")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("ClientOrVendors");
                });

            modelBuilder.Entity("BiesPro.Models.Municipality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("BiesPro.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AddressId");

                    b.Property<long>("ClientId");

                    b.Property<DateTime?>("EndDate");

                    b.Property<bool>("IsFinished");

                    b.Property<long>("OrderDetailsId");

                    b.Property<DateTime?>("StartDate");

                    b.Property<long>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("ClientId");

                    b.HasIndex("OrderDetailsId")
                        .IsUnique();

                    b.HasIndex("VendorId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BiesPro.Models.OrderDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("OrdersDetails");
                });

            modelBuilder.Entity("BiesPro.Models.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ClientOrVendorId");

                    b.Property<string>("EGN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ClientOrVendorId")
                        .IsUnique();

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("BiesPro.Models.Town", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("MunicipalityId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("BiesPro.Models.Address", b =>
                {
                    b.HasOne("BiesPro.Models.Town", "Town")
                        .WithMany("Addresses")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BiesPro.Models.ClientOrVendor", b =>
                {
                    b.HasOne("BiesPro.Models.Address", "Address")
                        .WithMany("ClientOrVendors")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BiesPro.Models.Order", b =>
                {
                    b.HasOne("BiesPro.Models.Address", "DeliveryAddress")
                        .WithOne("Order")
                        .HasForeignKey("BiesPro.Models.Order", "AddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BiesPro.Models.ClientOrVendor", "Client")
                        .WithMany("OrderClient")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BiesPro.Models.OrderDetails", "OrderDetails")
                        .WithOne("Order")
                        .HasForeignKey("BiesPro.Models.Order", "OrderDetailsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BiesPro.Models.ClientOrVendor", "Vendor")
                        .WithMany("OrderVendor")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BiesPro.Models.Person", b =>
                {
                    b.HasOne("BiesPro.Models.ClientOrVendor", "ClientOrVendor")
                        .WithOne("ContactPerson")
                        .HasForeignKey("BiesPro.Models.Person", "ClientOrVendorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BiesPro.Models.Town", b =>
                {
                    b.HasOne("BiesPro.Models.Municipality", "Municipality")
                        .WithMany("Towns")
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
